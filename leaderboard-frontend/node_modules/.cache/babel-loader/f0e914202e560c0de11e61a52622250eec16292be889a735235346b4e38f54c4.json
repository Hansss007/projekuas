{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\leaderboard-frontend\\\\src\\\\games\\\\Snake.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Snake.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst boardSize = 10;\nconst initialSnake = [[0, 0]];\nconst initialFood = [5, 5];\nconst gameSpeed = 200;\nfunction Snake() {\n  _s();\n  const [snake, setSnake] = useState(initialSnake);\n  const [food, setFood] = useState(initialFood);\n  const [direction, setDirection] = useState([0, 1]);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const gameInterval = useRef(null);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      switch (e.key) {\n        case \"ArrowUp\":\n          if (direction[0] !== 1) setDirection([-1, 0]);\n          break;\n        case \"ArrowDown\":\n          if (direction[0] !== -1) setDirection([1, 0]);\n          break;\n        case \"ArrowLeft\":\n          if (direction[1] !== 1) setDirection([0, -1]);\n          break;\n        case \"ArrowRight\":\n          if (direction[1] !== -1) setDirection([0, 1]);\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [direction]);\n  useEffect(() => {\n    if (gameStarted && !gameOver) {\n      gameInterval.current = setInterval(() => {\n        const newHead = [(snake[0][0] + direction[0] + boardSize) % boardSize, (snake[0][1] + direction[1] + boardSize) % boardSize];\n        const newSnake = [newHead, ...snake];\n        if (newHead[0] === food[0] && newHead[1] === food[1]) {\n          setFood([Math.floor(Math.random() * boardSize), Math.floor(Math.random() * boardSize)]);\n          setScore(prevScore => prevScore + 1);\n        } else {\n          newSnake.pop();\n        }\n        for (let i = 1; i < newSnake.length; i++) {\n          if (newSnake[i][0] === newHead[0] && newSnake[i][1] === newHead[1]) {\n            setGameOver(true);\n            clearInterval(gameInterval.current);\n            return;\n          }\n        }\n        setSnake(newSnake);\n      }, gameSpeed);\n    } else {\n      clearInterval(gameInterval.current);\n    }\n    return () => clearInterval(gameInterval.current);\n  }, [snake, direction, food, gameOver, gameStarted]);\n  const handleReset = () => {\n    setSnake(initialSnake);\n    setFood(initialFood);\n    setDirection([0, 1]);\n    setGameOver(false);\n    setScore(0);\n    setGameStarted(true);\n    clearInterval(gameInterval.current);\n  };\n  const handlePlayClick = () => {\n    setGameStarted(true);\n    setSnake(initialSnake);\n    setFood(initialFood);\n    setDirection([0, 1]);\n    setGameOver(false);\n    setScore(0);\n  };\n  const changeDirection = dir => {\n    switch (dir) {\n      case \"up\":\n        if (direction[0] !== 1) setDirection([-1, 0]);\n        break;\n      case \"down\":\n        if (direction[0] !== -1) setDirection([1, 0]);\n        break;\n      case \"left\":\n        if (direction[1] !== 1) setDirection([0, -1]);\n        break;\n      case \"right\":\n        if (direction[1] !== -1) setDirection([0, 1]);\n        break;\n      default:\n        break;\n    }\n  };\n  const head = snake[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"snake-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \"Gunakan tombol panah atau tombol layar sentuh untuk bermain.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Snake adalah permainan klasik di mana Anda mengontrol seekor ular yang tumbuh saat memakan makanan. Hindari menabrak diri sendiri!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-button\",\n        onClick: handlePlayClick,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"snake-board\",\n        children: [...Array(boardSize)].map((_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snake-row\",\n          children: [...Array(boardSize)].map((_, col) => {\n            const isHead = head && head[0] === row && head[1] === col;\n            const isSnakeBody = snake.some(([r, c], index) => index > 0 && r === row && c === col);\n            const isFood = food[0] === row && food[1] === col;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `snake-cell ${isHead ? \"snake-head\" : isSnakeBody ? \"snake\" : \"\"} ${isFood ? \"food\" : \"\"}`\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this);\n          })\n        }, row, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeDirection(\"up\"),\n          children: \"\\u2191\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeDirection(\"left\"),\n            children: \"\\u2190\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeDirection(\"down\"),\n            children: \"\\u2193\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeDirection(\"right\"),\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"final-score\",\n          children: [\"Final Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: handleReset,\n          children: \"Reset Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: handleReset,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(Snake, \"vt/qY5h8YTJTzoA2kY0qaw1JyHQ=\");\n_c = Snake;\nexport default Snake;\nvar _c;\n$RefreshReg$(_c, \"Snake\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","boardSize","initialSnake","initialFood","gameSpeed","Snake","_s","snake","setSnake","food","setFood","direction","setDirection","gameOver","setGameOver","score","setScore","gameStarted","setGameStarted","gameInterval","handleKeyDown","e","key","window","addEventListener","removeEventListener","current","setInterval","newHead","newSnake","Math","floor","random","prevScore","pop","i","length","clearInterval","handleReset","handlePlayClick","changeDirection","dir","head","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","map","_","row","col","isHead","isSnakeBody","some","r","c","index","isFood","_c","$RefreshReg$"],"sources":["C:/laragon/www/leaderboard-frontend/src/games/Snake.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Snake.css\";\r\n\r\nconst boardSize = 10;\r\nconst initialSnake = [[0, 0]];\r\nconst initialFood = [5, 5];\r\nconst gameSpeed = 200;\r\n\r\nfunction Snake() {\r\n  const [snake, setSnake] = useState(initialSnake);\r\n  const [food, setFood] = useState(initialFood);\r\n  const [direction, setDirection] = useState([0, 1]);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const gameInterval = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      switch (e.key) {\r\n        case \"ArrowUp\":\r\n          if (direction[0] !== 1) setDirection([-1, 0]);\r\n          break;\r\n        case \"ArrowDown\":\r\n          if (direction[0] !== -1) setDirection([1, 0]);\r\n          break;\r\n        case \"ArrowLeft\":\r\n          if (direction[1] !== 1) setDirection([0, -1]);\r\n          break;\r\n        case \"ArrowRight\":\r\n          if (direction[1] !== -1) setDirection([0, 1]);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [direction]);\r\n\r\n  useEffect(() => {\r\n    if (gameStarted && !gameOver) {\r\n      gameInterval.current = setInterval(() => {\r\n        const newHead = [\r\n          (snake[0][0] + direction[0] + boardSize) % boardSize,\r\n          (snake[0][1] + direction[1] + boardSize) % boardSize\r\n        ];\r\n        const newSnake = [newHead, ...snake];\r\n\r\n        if (newHead[0] === food[0] && newHead[1] === food[1]) {\r\n          setFood([\r\n            Math.floor(Math.random() * boardSize),\r\n            Math.floor(Math.random() * boardSize)\r\n          ]);\r\n          setScore((prevScore) => prevScore + 1);\r\n        } else {\r\n          newSnake.pop();\r\n        }\r\n\r\n        for (let i = 1; i < newSnake.length; i++) {\r\n          if (newSnake[i][0] === newHead[0] && newSnake[i][1] === newHead[1]) {\r\n            setGameOver(true);\r\n            clearInterval(gameInterval.current);\r\n            return;\r\n          }\r\n        }\r\n\r\n        setSnake(newSnake);\r\n      }, gameSpeed);\r\n    } else {\r\n      clearInterval(gameInterval.current);\r\n    }\r\n\r\n    return () => clearInterval(gameInterval.current);\r\n  }, [snake, direction, food, gameOver, gameStarted]);\r\n\r\n  const handleReset = () => {\r\n    setSnake(initialSnake);\r\n    setFood(initialFood);\r\n    setDirection([0, 1]);\r\n    setGameOver(false);\r\n    setScore(0);\r\n    setGameStarted(true);\r\n    clearInterval(gameInterval.current);\r\n  };\r\n\r\n  const handlePlayClick = () => {\r\n    setGameStarted(true);\r\n    setSnake(initialSnake);\r\n    setFood(initialFood);\r\n    setDirection([0, 1]);\r\n    setGameOver(false);\r\n    setScore(0);\r\n  };\r\n\r\n  const changeDirection = (dir) => {\r\n    switch (dir) {\r\n      case \"up\":\r\n        if (direction[0] !== 1) setDirection([-1, 0]);\r\n        break;\r\n      case \"down\":\r\n        if (direction[0] !== -1) setDirection([1, 0]);\r\n        break;\r\n      case \"left\":\r\n        if (direction[1] !== 1) setDirection([0, -1]);\r\n        break;\r\n      case \"right\":\r\n        if (direction[1] !== -1) setDirection([0, 1]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const head = snake[0];\r\n\r\n  return (\r\n    <div className=\"snake-container\">\r\n      <h2>Snake Game</h2>\r\n      {!gameStarted ? (\r\n        <div className=\"game-info\">\r\n          <div className=\"instructions\">\r\n            Gunakan tombol panah atau tombol layar sentuh untuk bermain.\r\n          </div>\r\n          <h3>\r\n            Snake adalah permainan klasik di mana Anda mengontrol seekor ular\r\n            yang tumbuh saat memakan makanan. Hindari menabrak diri sendiri!\r\n          </h3>\r\n          <button className=\"play-button\" onClick={handlePlayClick}>\r\n            Play\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"score\">Score: {score}</div>\r\n          <div className=\"snake-board\">\r\n            {[...Array(boardSize)].map((_, row) => (\r\n              <div key={row} className=\"snake-row\">\r\n                {[...Array(boardSize)].map((_, col) => {\r\n                  const isHead = head && head[0] === row && head[1] === col;\r\n                  const isSnakeBody = snake.some(\r\n                    ([r, c], index) => index > 0 && r === row && c === col\r\n                  );\r\n                  const isFood = food[0] === row && food[1] === col;\r\n                  return (\r\n                    <div\r\n                      key={col}\r\n                      className={`snake-cell ${\r\n                        isHead\r\n                          ? \"snake-head\"\r\n                          : isSnakeBody\r\n                          ? \"snake\"\r\n                          : \"\"\r\n                      } ${isFood ? \"food\" : \"\"}`}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"mobile-controls\">\r\n            <button onClick={() => changeDirection(\"up\")}>&uarr;</button>\r\n            <div>\r\n              <button onClick={() => changeDirection(\"left\")}>&larr;</button>\r\n              <button onClick={() => changeDirection(\"down\")}>&darr;</button>\r\n              <button onClick={() => changeDirection(\"right\")}>&rarr;</button>\r\n            </div>\r\n          </div>\r\n          {gameOver && (\r\n            <div className=\"game-over\">\r\n              <h2>Game Over</h2>\r\n              <p className=\"final-score\">Final Score: {score}</p>\r\n              <button className=\"reset-button\" onClick={handleReset}>\r\n                Reset Game\r\n              </button>\r\n            </div>\r\n          )}\r\n          {!gameOver && (\r\n            <button className=\"reset-button\" onClick={handleReset}>\r\n              Reset Game\r\n            </button>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Snake;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}