{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\leaderboard-frontend\\\\src\\\\games\\\\Memory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Memory.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardSymbols = [\"◯\", \"△\", \"◼\", \"★\", \"♢\", \"☀\", \"⬟\", \"♣\"];\nfunction shuffleArray(array) {\n  const newArray = [...array, ...array]; // duplicate for pairs\n  for (let i = newArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n  }\n  return newArray.map((symbol, index) => ({\n    id: index,\n    symbol,\n    flipped: false,\n    matched: false\n  }));\n}\nfunction Memory() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [gameWon, setGameWon] = useState(false);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [disableClick, setDisableClick] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false); // State untuk kontrol visibilitas\n\n  useEffect(() => {\n    if (gameStarted) {\n      setCards(shuffleArray(cardSymbols));\n    }\n  }, [gameStarted]);\n  useEffect(() => {\n    // Cek jika semua kartu sudah matched\n    if (cards.length && cards.every(card => card.matched)) {\n      setGameWon(true);\n    }\n  }, [cards]);\n  const handleCardClick = card => {\n    if (!gameStarted || disableClick || card.flipped || card.matched) return;\n    const flipped = [...flippedCards, card];\n    const updatedCards = cards.map(c => c.id === card.id ? {\n      ...c,\n      flipped: true\n    } : c);\n    setCards(updatedCards);\n    setFlippedCards(flipped);\n    if (flipped.length === 2) {\n      setDisableClick(true);\n      setTimeout(() => {\n        const [first, second] = flipped;\n        let newCards;\n        if (first.symbol === second.symbol) {\n          newCards = updatedCards.map(c => c.symbol === first.symbol ? {\n            ...c,\n            matched: true\n          } : c);\n        } else {\n          newCards = updatedCards.map(c => c.id === first.id || c.id === second.id ? {\n            ...c,\n            flipped: false\n          } : c);\n        }\n        setCards(newCards);\n        setFlippedCards([]);\n        setDisableClick(false);\n      }, 1000);\n    }\n  };\n  const resetGame = () => {\n    setCards(shuffleArray(cardSymbols));\n    setFlippedCards([]);\n    setGameWon(false);\n    setDisableClick(false);\n    setGameStarted(true); // Otomatis mulai game setelah reset\n  };\n  const handlePlayClick = () => {\n    setGameStarted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \"Klik tombol di bawah untuk memulai permainan.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: \"Temukan semua pasangan kartu yang cocok untuk memenangkan permainan ini!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-button\",\n        onClick: handlePlayClick,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${card.flipped || card.matched ? \"flipped\" : \"\"}`,\n        onClick: () => handleCardClick(card),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-front\",\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-back\",\n            children: card.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), gameWon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-won-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDF89 Game Selesai!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Main Lagi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Memory, \"uuCQEYpKePgEMQOLXb6tuWg2+Uo=\");\n_c = Memory;\nexport default Memory;\nvar _c;\n$RefreshReg$(_c, \"Memory\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","cardSymbols","shuffleArray","array","newArray","i","length","j","Math","floor","random","map","symbol","index","id","flipped","matched","Memory","_s","cards","setCards","gameWon","setGameWon","flippedCards","setFlippedCards","disableClick","setDisableClick","gameStarted","setGameStarted","every","card","handleCardClick","updatedCards","c","setTimeout","first","second","newCards","resetGame","handlePlayClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/laragon/www/leaderboard-frontend/src/games/Memory.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Memory.css\";\r\n\r\nconst cardSymbols = [\"◯\", \"△\", \"◼\", \"★\", \"♢\", \"☀\", \"⬟\", \"♣\"];\r\n\r\nfunction shuffleArray(array) {\r\n  const newArray = [...array, ...array]; // duplicate for pairs\r\n  for (let i = newArray.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\r\n  }\r\n  return newArray.map((symbol, index) => ({\r\n    id: index,\r\n    symbol,\r\n    flipped: false,\r\n    matched: false\r\n  }));\r\n}\r\n\r\nfunction Memory() {\r\n  const [cards, setCards] = useState([]);\r\n  const [gameWon, setGameWon] = useState(false);\r\n  const [flippedCards, setFlippedCards] = useState([]);\r\n  const [disableClick, setDisableClick] = useState(false);\r\n  const [gameStarted, setGameStarted] = useState(false); // State untuk kontrol visibilitas\r\n\r\n  useEffect(() => {\r\n    if (gameStarted) {\r\n      setCards(shuffleArray(cardSymbols));\r\n    }\r\n  }, [gameStarted]);\r\n\r\n  useEffect(() => {\r\n    // Cek jika semua kartu sudah matched\r\n    if (cards.length && cards.every((card) => card.matched)) {\r\n      setGameWon(true);\r\n    }\r\n  }, [cards]);\r\n\r\n  const handleCardClick = (card) => {\r\n    if (!gameStarted || disableClick || card.flipped || card.matched) return;\r\n\r\n    const flipped = [...flippedCards, card];\r\n    const updatedCards = cards.map((c) =>\r\n      c.id === card.id ? { ...c, flipped: true } : c\r\n    );\r\n    setCards(updatedCards);\r\n    setFlippedCards(flipped);\r\n\r\n    if (flipped.length === 2) {\r\n      setDisableClick(true);\r\n      setTimeout(() => {\r\n        const [first, second] = flipped;\r\n        let newCards;\r\n        if (first.symbol === second.symbol) {\r\n          newCards = updatedCards.map((c) =>\r\n            c.symbol === first.symbol ? { ...c, matched: true } : c\r\n          );\r\n        } else {\r\n          newCards = updatedCards.map((c) =>\r\n            c.id === first.id || c.id === second.id\r\n              ? { ...c, flipped: false }\r\n              : c\r\n          );\r\n        }\r\n        setCards(newCards);\r\n        setFlippedCards([]);\r\n        setDisableClick(false);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setCards(shuffleArray(cardSymbols));\r\n    setFlippedCards([]);\r\n    setGameWon(false);\r\n    setDisableClick(false);\r\n    setGameStarted(true); // Otomatis mulai game setelah reset\r\n  };\r\n\r\n  const handlePlayClick = () => {\r\n    setGameStarted(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"memory-container\">\r\n      <h2>Memory Game</h2>\r\n      {!gameStarted ? (\r\n        <div className=\"game-info\">\r\n          <div className=\"instructions\">Klik tombol di bawah untuk memulai permainan.</div>\r\n          <div className=\"description\">Temukan semua pasangan kartu yang cocok untuk memenangkan permainan ini!</div>\r\n          <button className=\"play-button\" onClick={handlePlayClick}>Play</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"card-grid\">\r\n          {cards.map((card) => (\r\n            <div\r\n              key={card.id}\r\n              className={`card ${card.flipped || card.matched ? \"flipped\" : \"\"}`}\r\n              onClick={() => handleCardClick(card)}\r\n            >\r\n              <div className=\"card-inner\">\r\n                <div className=\"card-front\">?</div>\r\n                <div className=\"card-back\">{card.symbol}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {gameWon && (\r\n        <div className=\"game-won-message\">\r\n          <h3>🎉 Game Selesai!</h3>\r\n          <button onClick={resetGame}>Main Lagi</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Memory;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAE5D,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B,MAAMC,QAAQ,GAAG,CAAC,GAAGD,KAAK,EAAE,GAAGA,KAAK,CAAC,CAAC,CAAC;EACvC,KAAK,IAAIE,CAAC,GAAGD,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC5C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACD,QAAQ,CAACC,CAAC,CAAC,EAAED,QAAQ,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,QAAQ,CAACG,CAAC,CAAC,EAAEH,QAAQ,CAACC,CAAC,CAAC,CAAC;EACzD;EACA,OAAOD,QAAQ,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,MAAM;IACtCC,EAAE,EAAED,KAAK;IACTD,MAAM;IACNG,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE;EACX,CAAC,CAAC,CAAC;AACL;AAEA,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvDC,SAAS,CAAC,MAAM;IACd,IAAI6B,WAAW,EAAE;MACfP,QAAQ,CAAClB,YAAY,CAACD,WAAW,CAAC,CAAC;IACrC;EACF,CAAC,EAAE,CAAC0B,WAAW,CAAC,CAAC;EAEjB7B,SAAS,CAAC,MAAM;IACd;IACA,IAAIqB,KAAK,CAACb,MAAM,IAAIa,KAAK,CAACU,KAAK,CAAEC,IAAI,IAAKA,IAAI,CAACd,OAAO,CAAC,EAAE;MACvDM,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAMY,eAAe,GAAID,IAAI,IAAK;IAChC,IAAI,CAACH,WAAW,IAAIF,YAAY,IAAIK,IAAI,CAACf,OAAO,IAAIe,IAAI,CAACd,OAAO,EAAE;IAElE,MAAMD,OAAO,GAAG,CAAC,GAAGQ,YAAY,EAAEO,IAAI,CAAC;IACvC,MAAME,YAAY,GAAGb,KAAK,CAACR,GAAG,CAAEsB,CAAC,IAC/BA,CAAC,CAACnB,EAAE,KAAKgB,IAAI,CAAChB,EAAE,GAAG;MAAE,GAAGmB,CAAC;MAAElB,OAAO,EAAE;IAAK,CAAC,GAAGkB,CAC/C,CAAC;IACDb,QAAQ,CAACY,YAAY,CAAC;IACtBR,eAAe,CAACT,OAAO,CAAC;IAExB,IAAIA,OAAO,CAACT,MAAM,KAAK,CAAC,EAAE;MACxBoB,eAAe,CAAC,IAAI,CAAC;MACrBQ,UAAU,CAAC,MAAM;QACf,MAAM,CAACC,KAAK,EAAEC,MAAM,CAAC,GAAGrB,OAAO;QAC/B,IAAIsB,QAAQ;QACZ,IAAIF,KAAK,CAACvB,MAAM,KAAKwB,MAAM,CAACxB,MAAM,EAAE;UAClCyB,QAAQ,GAAGL,YAAY,CAACrB,GAAG,CAAEsB,CAAC,IAC5BA,CAAC,CAACrB,MAAM,KAAKuB,KAAK,CAACvB,MAAM,GAAG;YAAE,GAAGqB,CAAC;YAAEjB,OAAO,EAAE;UAAK,CAAC,GAAGiB,CACxD,CAAC;QACH,CAAC,MAAM;UACLI,QAAQ,GAAGL,YAAY,CAACrB,GAAG,CAAEsB,CAAC,IAC5BA,CAAC,CAACnB,EAAE,KAAKqB,KAAK,CAACrB,EAAE,IAAImB,CAAC,CAACnB,EAAE,KAAKsB,MAAM,CAACtB,EAAE,GACnC;YAAE,GAAGmB,CAAC;YAAElB,OAAO,EAAE;UAAM,CAAC,GACxBkB,CACN,CAAC;QACH;QACAb,QAAQ,CAACiB,QAAQ,CAAC;QAClBb,eAAe,CAAC,EAAE,CAAC;QACnBE,eAAe,CAAC,KAAK,CAAC;MACxB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,MAAMY,SAAS,GAAGA,CAAA,KAAM;IACtBlB,QAAQ,CAAClB,YAAY,CAACD,WAAW,CAAC,CAAC;IACnCuB,eAAe,CAAC,EAAE,CAAC;IACnBF,UAAU,CAAC,KAAK,CAAC;IACjBI,eAAe,CAAC,KAAK,CAAC;IACtBE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5BX,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACE5B,OAAA;IAAKwC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BzC,OAAA;MAAAyC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnB,CAAClB,WAAW,gBACX3B,OAAA;MAAKwC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBzC,OAAA;QAAKwC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAA6C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjF7C,OAAA;QAAKwC,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAwE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3G7C,OAAA;QAAQwC,SAAS,EAAC,aAAa;QAACM,OAAO,EAAEP,eAAgB;QAAAE,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,gBAEN7C,OAAA;MAAKwC,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBtB,KAAK,CAACR,GAAG,CAAEmB,IAAI,iBACd9B,OAAA;QAEEwC,SAAS,EAAE,QAAQV,IAAI,CAACf,OAAO,IAAIe,IAAI,CAACd,OAAO,GAAG,SAAS,GAAG,EAAE,EAAG;QACnE8B,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAACD,IAAI,CAAE;QAAAW,QAAA,eAErCzC,OAAA;UAAKwC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBzC,OAAA;YAAKwC,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnC7C,OAAA;YAAKwC,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEX,IAAI,CAAClB;UAAM;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC,GAPDf,IAAI,CAAChB,EAAE;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,EACAxB,OAAO,iBACNrB,OAAA;MAAKwC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BzC,OAAA;QAAAyC,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB7C,OAAA;QAAQ8C,OAAO,EAAER,SAAU;QAAAG,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CAlGQD,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AAoGf,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}